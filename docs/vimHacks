q<letter><commands>q
<number>@<letter>

##########
Editing
#########
CRTL-R Redo
ctrl-a increment
ctrl-x decrement
J	join this line to the next line
5J	join 5 lines 
!]]sort -u | cat -n	sort all lines from cursor downwards, deleting duplicates, and number the lines
D          delete to the end of the line from the cursor
xp	exchange two characters (actually the two commands x=delete and p=paste) 
gu/gU Un/Capitalize word
#######
Moving
#######
K   Go to the man page for the word currently under the cursor
%   Putting the cursor on a brace, bracket, or parenthese and pressing % will send the cursor to the matching brace, bracket, or parenthese.
>>    Indent the highlighted code.
*   Read the string under the cursor and go to the next place it appears
#   Same as above, except it moves the cursor to the previous occurance.
ma    Make a bookmark named a at the current cursor position
`a    Go to bookmark a
`.    Go to the line that you last edited
w   Move the cursor forward by a word.
b   Move the cursor backward by a word.
0   Move the cursor to the beginning of the current line.
^   Move the cursor to the first character on the current line.
$   Move the cursor to the end of the line
c{motion}   Delete (change) the text moved over by {motion}
s   Cut the current character
D   Cut from the cursor to the end of the current line.
Y   Yank the whole line
"kyy copy the current line into register k.
set noignorecase
do  :diffget 
dp	:diffput


#####################
Modes
#####################
hexeditor mode :
vim -b myfile
[in vi]: %!xxd
[to return to previous view]: %!xxd -r
:set list  Show tabs & end of lines 
ZZ       to save and quit (a shortcut for :wq Rtn)
^G	show the current filename and status and line number
:set nu Rtn	show all line numbers (``:set nonu'' gets rid of the numbers)
#################
IO
###############
:12,17w filename Rtn	write lines #12-17 of the current text to a (new) text file
:r filename Rtn	read (and insert) contents of a text file 
